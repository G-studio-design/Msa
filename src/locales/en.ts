// src/locales/en.ts
const en = {
  // Login Page
  login: {
    title: 'Msarch App Login',
    description: 'Enter your credentials to access the dashboard.',
    usernameLabel: 'Username',
    usernamePlaceholder: 'Enter your username',
    passwordLabel: 'Password',
    passwordPlaceholder: 'Enter your password',
    loginButton: 'Login',
    loggingIn: 'Logging in...',
    success: 'Login Successful',
    redirecting: 'Redirecting to dashboard...',
    fail: 'Login Failed',
    invalidCredentials: 'Invalid username or password.',
    googleSignInButton: "Sign in with Google",
    validation: {
        usernameRequired: 'Username is required.',
        passwordRequired: 'Password is required.',
    }
  },
  // Dashboard Layout
  dashboardLayout: {
    menuTitle: 'Menu Navigation',
    menuDescription: 'Select a section to navigate.',
    dashboard: 'Dashboard',
    projects: 'Projects',
    manageUsers: 'Manage Users',
    requestLeave: 'Request Leave',
    leaveApprovals: 'Leave Approvals',
    adminActions: 'Admin Actions',
    manageWorkflows: 'Manage Workflows',
    monthlyReport: 'Monthly Report',
    settings: 'Settings',
    logout: 'Logout',
    appTitle: 'Msarch App',
    appTitleShort: 'Msarch',
    toggleMenu: 'Toggle Menu Panel',
    roles: {
        owner: 'Owner',
        akuntan: 'Accountant', // Changed from generaladmin
        adminproyek: 'Project Admin',
        arsitek: 'Architect',
        struktur: 'Structure',
        mep: 'MEP Engineer', 
        admindev: 'Developer',
    },
  },
  // Dashboard Page
  dashboardPage: {
    title: 'Dashboard',
    activeProjects: 'Active Projects',
    activeProjectsDesc: 'Projects currently in progress or pending',
    completedProjects: 'Completed Projects',
    completedProjectsDesc: 'Projects successfully finished',
    pendingActions: 'Pending Actions',
    pendingActionsDesc: 'Projects awaiting approval or next step',
    projectOverview: 'Project Overview',
    allProjectsDesc: 'All projects across divisions.',
    divisionProjectsDesc: 'Projects relevant to the {division} division.',
    noProjects: 'No projects found.',
    assignedTo: 'Assigned to',
    nextAction: 'Next',
    projectCanceled: 'This project was canceled.',
    projectCompleted: 'Project Completed',
    addNewProject: 'Add New Project',
    status: {
      completed: 'Completed',
      inprogress: 'In Progress',
      pendingapproval: 'Pending Approval',
      pendingpostsidangrevision: "Pending Post-Sidang Revision",
      delayed: 'Delayed',
      canceled: 'Canceled',
      pending: 'Pending',
      scheduled: 'Scheduled',
      pendinginitialinput: 'Pending Initial Input',
      pendingreview: 'Pending Review',
      pendingconsultationdocs: 'Pending Consultation Docs',
      pendingoffer: 'Pending Offer',
      pendingdpinvoice: 'Pending DP Invoice',
      pendingadminfiles: 'Pending Admin Files',
      pendingsurveydetails: 'Pending Survey Details',
      pendingarchitectfiles: 'Pending Architect Files',
      pendingstructurefiles: 'Pending Structure Files',
      pendingmepfiles: 'Pending MEP Files',
      pendingfinalcheck: 'Pending Final Check',
      pendingscheduling: 'Pending Scheduling',
      owner: 'Owner',
      akuntan: 'Accountant', // Changed from generaladmin
      adminproyek: 'Project Admin',
      arsitek: 'Architect',
      struktur: 'Structure',
      mep: 'MEP Engineer',
      admindev: 'Developer',
      notassigned: 'Not Assigned',
      sakit: "Sick Leave",
      cutitahunan: "Annual Leave",
      keperluanpribadi: "Personal Leave",
      cutitidakdibayar: "Unpaid Leave",
      lainnya: "Other",
    },
    progress: '{progress}% Complete',
    averageProgressTitle: 'Average Progress',
    averageProgressDesc: 'Average completion rate across your projects.',
    projectProgressChartTitle: 'Active Project Progress',
    projectProgressChartDesc: 'Visualization of current project completion rates.',
    noActiveProjectsForChart: 'No active projects to display in the chart.',
    progressChart: {
        label: 'Progress'
    },
    scheduleAgendaTitle: 'Schedule & Agenda',
    scheduleAgendaDesc: 'View scheduled project sidangs, surveys, employee leaves, holidays and company events.',
    todayButtonLabel: 'Today',
    eventsForDate: 'Events for {date}',
    noEventsOnDate: 'No events scheduled on this date.',
    selectDatePrompt: 'Select a date to view events.',
    eventTimeLabel: 'Time:',
    eventLocationLabel: 'Location:',
    projectSidangLabel: 'Project Sidang',
    projectSurveyLabel: 'Project Survey',
    surveyDescriptionLabel: 'Survey Desc:',
    employeeOnLeaveLabel: 'On Leave',
    leaveDurationLabel: 'Duration:',
    holidayLabel: "Holiday",
    companyEventLabel: "Company Event",
    reasonLabel: "Reason",
    toast: {
        errorTitle: 'Error',
        fetchError: 'Could not load page data.',
    }
  },
  // Projects Page
  projectsPage: {
    statusLabel: 'Status',
    nextActionLabel: 'Next Action',
    assignedLabel: 'Assigned',
    progressLabel: 'Progress',
    none: 'None',
    uploadProgressTitle: 'Upload Progress ({role})',
    descriptionLabel: 'Description / Notes',
    descriptionPlaceholder: 'Provide details for the {division} stage...',
    attachFilesLabel: 'Attach Files',
    filesHint: 'You can upload up to {max} files.',
    selectedFilesLabel: 'Selected files:',
    submitButton: 'Submit Progress',
    submittingButton: 'Submitting...',
    ownerActionTitle: 'Owner Action Required',
    ownerActionDesc: 'Review the submitted documents and decide whether to proceed.',
    approveButton: 'Approve',
    cancelProjectButton: 'Cancel Project', 
    scheduleSidangTitle: 'Schedule Sidang ({role})',
    dateLabel: 'Date',
    timeLabel: 'Time',
    locationLabel: 'Location',
    locationPlaceholder: 'e.g., Main Conference Room',
    confirmScheduleButton: 'Confirm Schedule',
    schedulingButton: 'Scheduling...',
    addCalendarButton: 'Add Sidang to Google Calendar',
    addingCalendarButton: 'Adding...',
    sidangOutcomeTitle: 'Declare Sidang Outcome',
    sidangOutcomeDesc: 'Mark the project as completed successfully, needing revision, or failed based on the sidang results.',
    markSuccessButton: 'Mark as Success',
    markRevisionNeededButton: 'Request Post-Sidang Revision',
    markFailButton: 'Mark as Fail (Cancel Project)',
    postSidangRevisionActionsSectionTitle: "Post-Sidang Revision Actions",
    notifyArchitectForRevisionButton: "Notify Architect for Revision Input",
    notifyStructureForRevisionButton: "Notify Structure for Revision Input",
    revisionFilesDescriptionLabel: "Revision Notes / Description",
    revisionFilesDescriptionPlaceholder: "Describe the revisions made or required...",
    attachRevisionFilesLabel: "Attach Revised Files",
    markRevisionCompletedAndFinishButton: "Mark Revision Complete & Finish Project",
    completedMessage: 'Project Completed Successfully!',
    canceledMessage: 'Project Canceled',
    uploadedFilesTitle: 'Uploaded Files',
    uploadedFilesDesc: 'History of files uploaded during the process.',
    loadingFiles: 'Loading file list...',
    noFiles: 'No files uploaded yet.',
    uploadedByOn: 'Uploaded by {user} on {date}',
    workflowHistoryTitle: 'Workflow History',
    workflowHistoryDesc: 'Timeline of actions taken.',
    loadingHistory: 'Loading history...',
    historyActionBy: '{action} by {division}',
    projectListTitle: 'Project List',
    projectListDescription: 'View and manage ongoing projects.',
    filterButton: 'Filter by Status',
    filterStatusLabel: 'Filter Statuses',
    filterClear: 'Show All',
    noProjectsFound: 'No projects match the current filters.',
    searchPlaceholder: "Search projects by title...",
    noSearchResults: "No projects found matching your search.",
    viewDetails: 'View Details',
    backToList: 'Back to List',
    downloadFileTooltip: 'Download File',
    reviseProjectTitle: 'Request Revision',
    revisionNoteLabel: 'Revision Note (Required)',
    revisionNotePlaceholder: 'Explain why this project needs revision...',
    reviseButton: 'Request Revision',
    revisingButton: 'Requesting Revision...',
    confirmRevisionTitle: 'Confirm Revision Request',
    confirmRevisionDesc: 'This will send the project back for correction. Are you sure?',
    confirmRevisionButton: 'Yes, Request Revision',
    cancelButton: 'Cancel',
    cancelDialogTitle: "Confirm Project Cancellation",
    cancelDialogDesc: "Are you sure you want to cancel project \"{projectName}\"? This action cannot be undone.",
    confirmCancelButton: "Yes, Cancel Project",
    revisionNotePrefix: 'Note:',
    invalidDate: 'Invalid Date',
    notApplicable: 'N/A',
    defaultMeetingLocation: 'Meeting Room 1',
    sidangEventTitlePrefix: 'Sidang',
    sidangEventDescPrefix: 'Sidang discussion for project',
    surveyDescriptionPlaceholder: "Enter survey details or location",
    optionalReportLabel: "Optional Report",
    optionalNoteLabel: "Optional",
    finalCheckNotePlaceholder: "Add any notes for the final check...",
    architectUploadInitialImagesTitle: "Upload Initial Reference Images for Structure & MEP",
    architectUploadInitialImagesButton: "Upload Initial Images & Notify Structure/MEP",
    architectUploadInitialImagesDialogTitle: "Upload Initial Reference Images",
    architectUploadInitialImagesDialogDesc: "These images will be sent to Structure & MEP divisions for early planning. The project will remain in your court.",
    currentProjectActionsTitle: "Current Project Actions",
    nextActionDescriptions: {
        uploadOfferDocument: "Upload Offer Document",
        approveOfferDocument: "Approve Offer Document",
        createDPInvoice: "Create DP Invoice",
        approveDPInvoice: "Approve DP Invoice",
        uploadAdminFiles: "Upload Admin Files",
        inputSurveyDetails: "Input Survey Details & Upload Report",
        uploadArchitectFiles: "Upload Architect Files",
        uploadStructureFiles: "Upload Structure Files",
        uploadMEPFiles: "Upload MEP Files", 
        performFinalCheck: "Perform Final Check",
        scheduleSidang: "Schedule Sidang",
        declareSidangOutcome: "Declare Sidang Outcome",
        reviseOfferDocument: "Revise & Re-submit Offer Document based on Owner feedback.",
        reviseDPInvoice: "Revise and Re-upload DP Invoice",
        performPostSidangRevisions: "Perform Post-Sidang Revisions",
        uploadPostSidangRevisions: "Upload post-sidang revisions, notify relevant parties if needed, then confirm project completion.",
    },
    workflowActions: { 
        approveOffer: "Approved Offer Document",
        uploadedOffer: "Uploaded Offer Document",
        uploadArchitectFiles: "Upload Architect Files",
        uploadedAdminFiles: "Uploaded Admin Files",
        uploadedMEPFiles: "Uploaded MEP Files", 
        scheduleSidang: "Scheduled Sidang",
        completedFinalCheck: "Completed Final Check",
        approveDPInvoice: "Approved DP Invoice",
        uploadedDPInvoice: "Uploaded DP Invoice",
        uploadStructureFiles: "Upload Structure Files",
        uploadedArchitectFiles: "Uploaded Architect Files",
        uploadedStructureFiles: "Upload Structure Files",
        submittedProgressFor: "Submitted Progress for",
        canceledProject: "Canceled Project",
        generateDPInvoice: "Generated DP Invoice",
        approvedOfferTransition: "Approved Offer",
        approvedDPInvoiceTransition: "Approved DP Invoice",
        markedAsCompleted: "Marked as Completed",
        scheduledSidangFor: "Scheduled Sidang for",
        declareSidangOutcome: "Declared Sidang Outcome (Success/Fail)",
        reEvaluateOffer: "Re-evaluated/Revised Offer",
        reApproveOffer: "Re-Approved Offer (Issue with DP Gen)",
        reApproveDPInvoice: "Re-Approved DP Invoice (Issue with Admin Files)",
        reviseAdminFiles: "Revised Admin Files",
        reviseArchitectFiles: "Revised Architect Files",
        reviseStructureFiles: "Revised Structure Files",
        reviseMepFiles: "Revised MEP Files",
        reDoFinalCheck: "Re-did Final Check",
        rescheduleSidang: "Rescheduled Sidang",
        uploadedSurveyResults: "Uploaded Survey Results",
        architectUploadedInitialImages: "Architect uploaded initial reference images for Structure & MEP.",
        adminProyekCompletedPostSidangRevision: "Project Admin completed post-sidang revisions and finalized the project.",
        offerCanceledByOwner: "Project offer was canceled by the Owner.",
        offerRevisedByOwner: "Project offer revision requested by Owner."
    },
    toast: {
      permissionDenied: 'Permission Denied',
      notYourTurn: 'Not your turn to update progress.',
      missingInput: 'Missing Input',
      provideDescOrFile: 'Please provide a description or upload files.',
      provideOfferFile: 'Please upload offer files.',
      progressSubmitted: 'Progress Submitted',
      notifiedNextStep: 'Notified {division} for next step.',
      actionDidNotChangeStatusTitle: "Action Processed",
      actionDidNotChangeStatusDesc: "The action was processed, but the project status or assignment did not change based on the current workflow definition.",
      revisionNotApplicableShort: 'Revision Not Applicable',
      revisionNotApplicable: 'Revision is not applicable for the current project step or your role.',
      noTransitionFound: 'No valid workflow transition found for this action from the current state.',
      onlyOwnerDecision: 'Only Owner can make this decision.',
      projectCanceled: 'Project Canceled',
      projectMarkedCompleted: "Project Completed",
      projectCompletedSuccessfully: "Project \"{title}\" has been successfully marked as completed.",
      projectMarkedCanceled: "Project Canceled",
      projectCanceledSuccessfully: "Project \"{title}\" has been successfully canceled.",
      revisionRequested: "Revision Requested",
      projectSentForRevision: "Project \"{projectName}\" sent back to {division} for revision.",
      sidangOutcomeSuccessTitle: "Sidang Outcome: Success",
      sidangOutcomeSuccessDesc: "Project \"{title}\" has been marked as completed based on sidang outcome.",
      sidangOutcomeRevisionTitle: "Sidang Outcome: Revision Needed",
      sidangOutcomeRevisionDesc: "Project \"{title}\" has been sent to {division} for post-sidang revisions.",
      sidangOutcomeCanceledTitle: "Sidang Outcome: Canceled",
      sidangOutcomeCanceledDesc: "Project \"{title}\" has been canceled based on sidang outcome.",
      revisionCompletedTitle: "Revision Completed",
      revisionCompletedDesc: "Project \"{title}\" has been successfully completed after revisions.",
      offerApproved: 'Offer Approved',
      offerApprovedDesc: '{division} notified for DP Invoice.',
      dpApproved: 'DP Invoice Approved',
      dpApprovedDesc: '{division} notified for Admin Files.',
      progressCompleted: 'Project Completed Successfully!',
      failNotImplemented: 'Fail Logic Not Implemented',
      failNotImplementedDesc: 'Marking as fail is not fully implemented yet.',
      missingScheduleInfo: 'Missing Schedule Info',
      provideDateTimeLoc: 'Please provide date, time, and location.',
      sidangScheduled: 'Sidang Scheduled',
      sidangScheduledDesc: 'All relevant parties notified. Attempting to add to calendar.',
      cannotAddCalendarYet: 'Cannot Add Yet',
      mustScheduleFirst: 'Sidang must be scheduled first.',
      calendarError: 'Calendar Error',
      couldNotAddEvent: 'Could not add event to Google Calendar.',
      addedToCalendar: 'Added to Google Calendar',
      eventId: 'Event ID: {id}',
      errorFindingSchedule: 'Error Finding Schedule',
      couldNotFindSchedule: 'Could not find scheduling information in history.',
      downloadStarted: 'Download Started',
      downloadSuccessDesc: 'Download for {filename} has started.',
      downloadErrorDesc: 'Failed to download file.',
      revisionPermissionDenied: 'You do not have permission to request a revision for this project at its current stage.',
      revisionSuccess: 'Revision Requested',
      revisionSuccessDesc: 'Project sent back to {division} for revision.',
      revisionError: 'Revision Error',
      revisionNoteRequired: 'A note is required to request a revision.',
      schedulingPermissionDenied: 'You do not have permission to schedule this project.',
      error: 'Error',
      couldNotLoadProjects: 'Could not load project data.',
      projectNotFound: 'Project specified in URL not found.',
      updateError: 'Update Error',
      failedToSubmitProgress: 'Failed to submit progress.',
      failedToProcessDecision: 'Failed to process decision.',
      failedToSaveSchedule: 'Failed to save schedule.',
      failedToRevise: 'Failed to revise project.',
      maxFilesExceeded: 'Cannot upload more than {max} files at once.',
      uploadError: 'Upload Error',
      initialImagesUploadedTitle: "Initial Images Uploaded",
      initialImagesUploadedDesc: "Initial reference images for project \"{projectName}\" have been uploaded by {actorUsername}. Divisions Structure & MEP have been notified.",
      revisionNotificationSentTitle: "Notification Sent",
      revisionNotificationSentDesc: "Division {division} has been notified to contribute to the revision for project \"{projectName}\" by {actorUsername}."
    }
  },
  // Add Project Page
  addProjectPage: {
      title: 'Create New Project',
      description: 'Enter the project title, select a workflow, and upload initial files.',
      titleLabel: 'Project Title',
      titlePlaceholder: 'Enter the full project title',
      workflowLabel: 'Select Workflow',
      workflowPlaceholder: 'Choose a workflow type',
      filesLabel: 'Initial Files (Optional)',
      filesHint: 'Upload any initial documents or briefs related to the project. Max {max} files.',
      createButton: 'Create Project',
      creatingButton: 'Creating...',
      accessDenied: 'You do not have permission to add new projects.',
      cancelButton: 'Cancel',
      selectedFilesLabel: 'Selected Files',
      toast: {
          success: 'Project Created',
          successDesc: 'Project "{title}" added successfully using "{workflowName}" workflow. {division} notified for the first step.',
          error: 'Failed to Create Project',
          fetchWorkflowsError: 'Could not load workflow types.',
          uploadFailed: "One or more files failed to upload. Project not created.",
          unknownWorkflow: "Unknown Workflow",
          defaultWorkflowName: "Standard Workflow"
      },
      validation: {
          titleMin: 'Project title must be at least 5 characters.',
          workflowRequired: 'Workflow selection is required.',
      }
  },
  // Manage Users Page
  manageUsersPage: {
    title: 'Manage Users',
    description: 'Add, edit, or remove user accounts.',
    addUserButton: 'Add User',
    addUserDialogTitle: 'Add New User',
    addUserDialogDesc: 'Enter the details for the new user account.',
    editUserButtonLabel: 'Edit User',
    editUserDialogTitle: 'Edit User: {username}',
    editUserDialogDesc: 'Update the username or role for this user.',
    editUserSubmitButton: 'Save Changes',
    editingUserButton: 'Saving...',
    usernameLabel: 'Username',
    usernamePlaceholder: 'e.g., john_doe',
    passwordLabel: 'Password',
    passwordPlaceholder: 'Enter secure password',
    roleLabel: 'Role / Division',
    rolePlaceholder: 'Select a division',
    cancelButton: 'Cancel',
    addUserSubmitButton: 'Add User',
    addingUserButton: 'Adding...',
    tableHeaderUsername: 'Username',
    tableHeaderPassword: 'Password',
    tableHeaderRole: 'Role / Division',
    tableHeaderActions: 'Actions',
    showPasswordButtonLabel: 'Show Password',
    hidePasswordButtonLabel: 'Hide Password',
    passwordHidden: 'Hidden',
    passwordNotSet: 'Not Set',
    noUsers: 'No users found.',
    deleteUserButtonLabel: 'Delete User',
    deleteDialogTitle: 'Confirm Deletion',
    deleteDialogDesc: 'Are you sure you want to delete user "{username}"? This action cannot be undone.',
    deleteDialogCancel: 'Cancel',
    deleteDialogConfirm: 'Delete User',
    cannotChangeLastAdminRoleHint: 'Cannot change the role of the last Accountant.',
    roles: {
       owner: 'Owner',
       akuntan: 'Accountant',
       adminproyek: 'Project Admin',
       arsitek: 'Architect',
       struktur: 'Structure',
       mep: 'MEP Engineer',
       admindev: 'Developer',
     },
    toast: {
        userAdded: 'User Added',
        userAddedDesc: 'User {username} created successfully.',
        userUpdated: 'User Updated',
        userUpdatedDesc: 'User {username} updated successfully.',
        userDeleted: 'User Deleted',
        userDeletedDesc: 'User {username} removed.',
        error: 'Error',
        usernameExists: 'Username already exists.',
        cannotDeleteSelf: 'You cannot delete your own account.',
        cannotDeleteLastAdmin: 'Cannot delete the last Accountant.',
        permissionDenied: 'Permission Denied',
        editPermissionDenied: 'You do not have permission to edit this user.',
        cannotEditAdminDev: "The 'Developer' account cannot be edited through this interface.",
        cannotDeleteAdminDev: "The 'Developer' account cannot be deleted.",
        cannotCreateAdminDev: "Cannot create user with 'Developer' role.",
        cannotSetAdminDevRole: "The 'Developer' role cannot be assigned.",
        cannotChangeAdminDevRole: "The role of 'Developer' cannot be changed.",
        userNotFound: 'User not found.',
        fetchError: 'Could not load user data.',
    },
    validation: {
       usernameMin: 'Username must be at least 3 characters',
       passwordMin: 'Password must be at least 6 characters',
       roleRequired: 'Role is required',
       usernameExists: 'Username already exists.',
    },
    accessDeniedTitle: 'Access Denied',
    accessDeniedDesc: 'You do not have the required permissions to view this page.',
  },
   // Admin Actions Page
   adminActionsPage: {
       title: 'Admin Actions',
       description: 'Modify project titles, manually change project status, or delete projects.',
       tableHeaderId: 'Project ID',
       tableHeaderTitle: 'Current Title',
       tableHeaderStatus: 'Status',
       tableHeaderActions: 'Actions',
       editTitleActionTooltip: "Edit Title",
       changeStatusActionTooltip: "Change Status Manually",
       deleteProjectActionTooltip: "Delete Project",
       saveTitleActionTooltip: "Save Title",
       cancelEditActionTooltip: "Cancel Edit",
       noProjects: 'No projects found.',
       changeStatusDialogTitle: 'Change Project Status: {title}',
       changeStatusDialogDesc: 'Manually update the status and assignment for this project. Use with caution.',
       currentStatusLabel: 'Current Status',
       newStatusLabel: 'New Status',
       newStatusPlaceholder: 'Select new status',
       newAssignedDivisionLabel: 'New Assigned Division',
       newAssignedDivisionPlaceholder: 'Select new division',
       newNextActionLabel: 'New Next Action Description',
       newNextActionPlaceholder: 'Describe the next step (or leave blank)',
       newProgressLabel: 'New Progress (%)',
       reasonNoteLabel: 'Reason/Note for Change (Required)',
       reasonNotePlaceholder: 'Explain why this manual change is needed.',
       saveChangesButton: 'Save Status Changes',
       savingChangesButton: 'Saving...',
       cancelButton: 'Cancel',
       noneAssignedLabel: '(None)',
       deleteProjectDialogTitle: "Confirm Project Deletion",
       deleteProjectDialogDesc: "Are you sure you want to delete project \"{title}\"? This will also delete all associated files and cannot be undone.",
       deleteProjectConfirmButton: "Yes, Delete Project",
       toast: {
           error: 'Error',
           titleEmpty: 'Title cannot be empty.',
           titleUpdated: 'Title Updated',
           titleUpdatedDesc: 'Project {id} title changed successfully.',
           statusChangeError: 'Status Change Error',
           statusChangeNoteRequired: 'A reason/note is required for manual status change.',
           statusChangeSuccess: 'Status Updated Manually',
           statusChangeSuccessDesc: 'Project "{title}" status changed to "{status}". {division} notified.',
           failedToUpdateStatus: 'Failed to update project status manually.',
           fetchError: 'Could not load project data.',
           projectDeletedTitle: "Project Deleted",
           projectDeletedDesc: "Project \"{title}\" has been deleted.",
           deletePermissionDenied: "You do not have permission to delete projects.",
           deleteError: "Failed to delete project.",
       },
       accessDeniedTitle: 'Access Denied',
       accessDeniedDesc: 'You do not have permission to access this page.',
   },
  // Manage Workflows Page
  manageWorkflowsPage: {
    title: 'Manage Workflows',
    description: 'Define and manage project workflows. Only Admin Developers can perform these actions.',
    addWorkflowButton: 'Add New Workflow',
    tableHeaderName: 'Workflow Name',
    tableHeaderDescription: 'Description',
    tableHeaderSteps: 'Steps',
    tableHeaderActions: 'Actions',
    noWorkflows: 'No workflows defined yet.',
    editAction: 'Edit Workflow',
    deleteAction: 'Delete Workflow',
    deleteDialogTitle: 'Confirm Workflow Deletion',
    deleteDialogDesc: "Are you sure you want to delete workflow \"{name}\"? This action cannot be undone and might affect new projects if it's the only workflow.",
    deleteDialogConfirm: 'Yes, Delete Workflow',
    cancelButton: 'Cancel',
    accessDeniedTitle: 'Access Denied',
    accessDeniedDesc: 'Only Admin Developers can manage workflows.',
    addDialogTitle: 'Add New Workflow',
    addDialogDesc: 'Enter the name and description for the new workflow. Steps will be based on the default standard workflow.',
    addDialogStepsInfo: 'The new workflow will be created with the standard project steps. You can edit them later.',
    addDialogSubmitButton: 'Create Workflow',
    editDialogTitle: 'Edit Workflow: {name}',
    editDialogDesc: 'Modify the workflow name, description, and reorder steps.',
    editDialogSubmitButton: 'Save Changes',
    editStepsInfo: 'Use buttons to reorder steps. Full step editing will be available later.',
    stepsLabel: 'Workflow Steps',
    moveStepUp: 'Move Step Up',
    moveStepDown: 'Move Step Down',
    stepAssignedDivisionLabel: 'Assigned Division',
    stepNextActionLabel: 'Next Action',
    transitionActionLabel: 'Transition on action',
    noTransitionsDefined: 'No transitions defined for this step.',
    noneLabel: 'None',
    notApplicable: 'N/A',
    cannotDeleteDefaultTooltip: "The default standard workflow cannot be deleted if it's the last one or in active use.",
    formLabels: {
      name: 'Workflow Name',
      description: 'Description (Optional)',
    },
    formPlaceholders: {
      name: 'e.g., Standard Building Project',
      description: 'Describe the purpose or type of this workflow',
    },
    validation: {
      nameMin: 'Workflow name must be at least 3 characters.',
    },
    toast: {
      error: 'Error',
      fetchError: 'Could not load workflows.',
      addSuccessTitle: 'Workflow Added',
      addSuccessDesc: 'Workflow "{name}" has been created with default steps.',
      addError: 'Failed to add workflow.',
      editSuccessTitle: 'Workflow Updated',
      editSuccessDesc: 'Workflow "{name}" has been updated.',
      editError: 'Failed to update workflow.',
      deleteSuccessTitle: 'Workflow Deleted',
      deleteSuccessDesc: 'Workflow "{name}" has been deleted.',
      deleteError: 'Failed to delete workflow.',
      cannotDeleteDefaultWorkflowError: "Cannot delete the last or default workflow.",
    }
  },
  // Settings Page
  settingsPage: {
    title: 'Settings',
    description: 'Manage your account and application settings.',
    profileCardTitle: 'Profile Information',
    usernameLabel: 'Username',
    usernamePlaceholder: 'Enter username',
    displayNameLabel: 'Display Name',
    emailLabel: 'Email Address',
    emailPlaceholder: 'Enter your email',
    whatsappLabel: 'WhatsApp Number',
    whatsappPlaceholder: 'Enter WhatsApp number (optional)',
    changePictureButton: 'Change Picture',
    uploadingPictureButton: 'Uploading...',
    pictureHint: 'Upload a new profile picture (PNG, JPG). Max 2MB.',
    updateProfileButton: 'Update Profile',
    updatingProfileButton: 'Updating...',
    passwordCardTitle: 'Update Password',
    currentPasswordLabel: 'Current Password',
    currentPasswordPlaceholder: 'Enter current password',
    newPasswordLabel: 'New Password',
    newPasswordPlaceholder: 'Enter new password',
    confirmPasswordLabel: 'Confirm New Password',
    confirmPasswordPlaceholder: 'Confirm new password',
    updatePasswordButton: 'Update Password',
    updatingPasswordButton: 'Updating...',
    notificationsCardTitle: 'Notification Preferences',
    emailNotificationsLabel: 'Email Notifications',
    emailNotificationsHint: 'Receive email updates for project assignments and status changes.',
    inAppNotificationsLabel: 'In-App Notifications',
    inAppNotificationsHint: 'Show notifications within the application.',
    languageCardTitle: 'Language Settings',
    languageCardDescription: 'Choose your preferred display language.',
    languageSelectLabel: 'Display Language',
    languageSelectPlaceholder: 'Select language',
    languageSelectHint: 'Select the language for the application interface.',
    languageEnglish: 'English',
    languageIndonesian: 'Bahasa Indonesia',
    googleCalendarCardTitle: "Google Calendar Integration",
    connectGoogleCalendar: 'Connect Google Calendar',
    disconnectGoogleCalendar: 'Disconnect Google Calendar',
    googleCalendarConnected: 'Google Calendar is connected.',
    googleCalendarNotConnected: 'Connect your Google Calendar to schedule project sidangs directly.',
    googleCalendarConnectDesc: 'Authorize Msarch App to access your Google Calendar to create events for project sidangs.',
    googleCalendarError: 'Google Calendar Error',
    googleCalendarErrorLinking: 'Failed to link Google Calendar. Please try again.',
    googleCalendarErrorUnlinking: 'Failed to unlink Google Calendar.',
    googleCalendarLinkSuccess: 'Google Calendar linked successfully!',
    googleCalendarUnlinkSuccess: 'Google Calendar unlinked.',
    googleCalendarOAuthFailed: 'Google OAuth failed. Please try again.',
    googleCalendarNoCode: 'No authorization code received from Google.',
    googleCalendarNoAccessToken: 'No access token received from Google.',
    googleCalendarNoEmail: 'Could not retrieve email from Google profile.',
    googleCalendarUserNotFound: 'User with email {email} not found. Manual account creation/linking might be required.',
    googleCalendarTokenExchangeFailed: 'Failed to exchange Google token.',
    toast: {
        error: 'Error',
        success: 'Success',
        fieldsRequired: 'All password fields are required.',
        requiredFields: 'Username and Email are required.',
        invalidEmail: 'Please enter a valid email address.',
        passwordsDontMatch: 'New passwords do not match.',
        passwordTooShort: 'New password must be at least 6 characters.',
        passwordUpdated: 'Password updated successfully.',
        passwordUpdateFailed: 'Failed to update password. Check current password.',
        usernameRequired: 'Username cannot be empty.',
        usernameTooShort: 'Username must be at least 3 characters.',
        profileUpdated: 'Profile updated successfully.',
        profileUpdateFailed: 'Failed to update profile.',
        languageChanged: 'Language Changed',
        languageChangedDesc: 'Interface language updated.',
        passwordMismatchError: 'Current password does not match.',
        usernameExistsError: 'Username already exists. Please choose another.',
    }
  },
  // Monthly Report Page
   monthlyReportPage: {
       title: "Monthly Project Report",
       description: "Summary of projects active, completed, and canceled within the selected month.",
       selectMonthLabel: "Select Month",
       selectMonthPlaceholder: "Select month",
       selectYearLabel: "Select Year",
       selectYearPlaceholder: "Select year",
       generateReportButton: "Generate Report",
       generatingReportButton: "Generating...",
       downloadReportSectionTitle: "Download Report",
       downloadReportSectionDesc: "Download the generated monthly report as a Word document.",
       downloadWord: "Download Word (.docx)",
       downloadingWord: "Downloading Word...",
       noDataForMonth: "No project data found for the selected month and year.",
       tryDifferentMonthYear: "Try selecting a different month or year.",
       totalProjects: "Total Projects Reviewed",
       totalProjectsShort: "Projects",
       totalProjectsDesc: "Total Projects: {total} (Completed: {completed}, Canceled: {canceled}, In Progress: {inProgress})",
       completedProjects: "Completed Projects",
       completedProjectsShort: "Completed",
       canceledProjects: "Canceled Projects",
       canceledProjectsShort: "Canceled",
       inProgressProjects: "In Progress Projects",
       inProgressProjectsShort: "In Progress",
       errorGeneratingReport: "Error Generating Report",
       reportFor: "Report for",
       none: "None",
       tableCaption: "List of projects active, completed, or canceled in the selected month.",
       tableHeaderTitle: "Project Title",
       tableHeaderStatus: "Status",
       tableHeaderLastActivityDate: "Last Activity / End Date",
       tableHeaderContributors: "Contributors",
       tableHeaderProgress: "Progress (%)",
       tableHeaderCreatedBy: "Created By",
       tableHeaderCreatedAt: "Created At",
       page: "Page",
       of: "of",
       generatedOn: "Generated on",
       summaryTitle: "Summary",
       chartTitleWord: "Project Status Overview",
       tableCaptionWord: "Detailed Project List",
       status: {
         completed: 'Completed',
         inprogress: 'In Progress',
         canceled: 'Canceled',
       },
       toast: {
           error: "Error",
           couldNotLoadProjects: "Could not load project data for reports.",
           chartImageErrorTitle: "Chart Image Error",
           chartImageErrorDesc: "Could not generate the project status chart image.",
           loadingProjects: "Loading project data...",
           generateReportFirst: "Please generate a report first.",
           downloadSuccessTitle: "Download Started",
           downloadSuccessDescWord: "Word report download has started.",
           downloadErrorDesc: "Failed to download Word report. Please check server logs or try again.",
           wordGenerationError: "Word Document Generation Error",
           wordGenerationErrorDetails: "The Word document could not be generated due to an internal structure error. Please contact support or try again later.",
       }
   },
  // Leave Request Page
  leaveRequestPage: {
    title: "Submit Leave Request",
    description: "Complete the form below to request time off.",
    formLabels: {
      leaveType: "Leave Type",
      startDate: "Start Date",
      endDate: "End Date",
      reason: "Reason for Leave",
    },
    formPlaceholders: {
      leaveType: "Select leave type",
      startDate: "Pick a start date",
      endDate: "Pick an end date",
      reason: "Briefly explain the reason for your leave (min. 10 characters)",
    },
    leaveTypes: {
      sickLeave: "Sick Leave",
      annualLeave: "Annual Leave",
      personalLeave: "Personal Leave",
      unpaidLeave: "Unpaid Leave",
      other: "Other",
    },
    numberOfDays: "Total: {days} day(s)",
    reasonHint: "Provide a clear reason for your leave request.",
    submitButton: "Submit Request",
    submittingButton: "Submitting...",
    toast: {
      successTitle: "Request Submitted",
      requestSubmitted: "Your leave request has been successfully submitted for approval.",
      errorTitle: "Submission Failed",
      submissionFailed: "An error occurred while submitting your leave request.",
      notLoggedIn: "You must be logged in to submit a leave request.",
    },
    validation: {
      leaveTypeRequired: "Leave type is required.",
      startDateRequired: "Start date is required.",
      endDateRequired: "End date is required.",
      reasonMinLength: "Reason must be at least 10 characters.",
      reasonMaxLength: "Reason cannot exceed 500 characters.",
      endDateAfterStartDate: "End date cannot be before start date.",
    },
  },
  // Leave Approvals Page
  leaveApprovalsPage: {
    title: "Leave Requests for Approval",
    description: "Review and process pending employee leave requests.",
    noPendingRequests: "No Pending Leave Requests",
    allCaughtUp: "You're all caught up!",
    tableCaption: "Pending leave requests awaiting your action.",
    tableHeaders: {
      employee: "Employee",
      leaveType: "Leave Type",
      dates: "Dates",
      reason: "Reason",
      actions: "Actions",
    },
    approveButton: "Approve",
    rejectButton: "Reject",
    viewReason: "View Reason",
    closeButton: "Close",
    reasonDialogTitle: "Reason for Leave - {employee}",
    rejectDialog: {
      title: "Reject Leave Request for {employee}",
      description: "Please provide a reason for rejecting this leave request. This will be communicated to the employee.",
      reasonLabel: "Rejection Reason (Required)",
      reasonPlaceholder: "Enter reason for rejection...",
      confirmButton: "Confirm Rejection",
    },
    cancelButton: 'Cancel',
    toast: {
      errorTitle: "Error",
      fetchError: "Could not load pending leave requests.",
      actionFailed: "The action could not be completed.",
      approvedSuccessTitle: "Leave Approved",
      approvedSuccessDesc: "The leave request has been approved.",
      rejectedSuccessTitle: "Leave Rejected",
      rejectedSuccessDesc: "The leave request has been rejected.",
      reasonRequired: "Rejection reason is required.",
    }
  },
   // Notifications (General)
   notifications: {
       permissionGrantedTitle: "Notifications Enabled",
       permissionGrantedDesc: "You will now receive notifications.",
       permissionDeniedTitle: "Notifications Denied",
       permissionDeniedDesc: "You can enable notifications later in your browser settings.",
       permissionErrorTitle: "Permission Error",
       permissionErrorDesc: "Could not request notification permission.",
       notSupportedTitle: "Notifications Not Supported",
       notSupportedDesc: "Your browser does not support notifications.",
       tooltip: "Notifications",
       title: "Notifications",
       description: "Recent updates and required actions.",
       empty: "No new notifications.",
   },
};

export default en;

